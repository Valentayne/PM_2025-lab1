name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Create .env file
      run: |
        cat > .env << EOF
        # Flask
        HOST=0.0.0.0
        PORT=10500
        
        # Postgres
        DB_NAME=mydb
        DB_USER=myuser
        DB_PASS=mypassword
        DB_HOST=database
        DB_PORT=5432
        
        # Nginx
        NGINX_PORT=80
        BACKEND_HOST=backend
        EOF

    - name: Build and start services
      run: |
        docker-compose -f docker-compose.yml up --build -d

    - name: Wait for services
      run: sleep 20

    - name: Check container logs
      if: always()
      run: |
        echo "=== Frontend logs ==="
        docker-compose logs --tail=30 frontend
        echo ""
        echo "=== Backend logs ==="
        docker-compose logs --tail=30 backend
        echo ""
        echo "=== Database logs ==="
        docker-compose logs --tail=30 database

    - name: Check database
      run: docker-compose exec -T database pg_isready -U myuser -d mydb

    - name: Check frontend availability
      run: curl -f http://localhost:80 || exit 1

    - name: Check backend availability  
      run: curl -f http://localhost:10500 || exit 1

    - name: Show logs on failure
      if: failure()
      run: docker-compose logs --tail=50

    - name: Cleanup
      if: always()
      run: docker-compose down -v